# Get vault token
#- name: Vault auth
#  uri:
#    url: "{{ vault_addr }}/v1/auth/cert/login"
#    method: POST
#    client_cert: ansible.kansai.pem
#    client_key: ansible.kansai.key
#    body: "{ 'name': 'ansible' }"
#    return_content: yes
#  register: vault_token_response
#
#- name: Vault token verification
#  debug:
#    msg: "{{ vault_token_response.auth.client_token }}"
#
#- name: Get Vault secret
#  uri:
#    url: "{{ vault_addr }}/v1/kv/data/ansible"
#    method: GET
#    headers:
#      X-Vault-Token: "{{ vault_token_response.auth.client_token }}"
#    status_code: 200
#    return_content: yes
#  register: secret_response
#
#- name: Vault secret verification
#  debug:
#    msg: "{{ secret_response.data.data.data }}"

# Create local user
- name: Create casey group
  group:
    name: "{{ user_group }}"
    state: present

- name: Create casey user
  user:
    name: "{{ user_name }}"
    password: "{{ user_password | password_hash('sha512', user_password_salt) }}"
    shell: /bin/bash
    home: "/home/{{ user_name }}"
    create_home: true
    group: "{{ user_group }}"
    groups:
      - sudo
    state: present

- name: Create ssh directory
  file:
    path: "/home/{{ user_name }}/.ssh"
    state: directory
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
    mode: 0700

- name: Create authorized_keys file
  file:
    path: "/home/{{ user_name }}/.ssh/authorized_keys"
    state: touch
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
    mode: 0600

- name: Inject SSH keys
  lineinfile:
    path: "/home/{{ user_name }}/.ssh/authorized_keys"
    line: "{{ item }}"
  with_items:
    - "{{ wsl_pubkey }}"
    - "{{ spectre_pubkey }}"

#- name: Inject Spectre SSH key
#  lineinfile:
#    path: "/home/{{ user_name }}/.ssh/authorized_keys"
#    line: "{{ spectre_pubkey }}"

# Packages
- name: apt update
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install vim
  apt:
    name: "vim"
    state: present

- name: Install htop
  apt:
    name: "htop"
    state: present

- name: Install curl
  apt:
    name: "curl"
    state: present

- name: Install jq
  apt:
    name: "jq"
    state: present

- name: Install ca-certificates package
  apt:
    name: "ca-certificates"
    state: present

- name: Create cert directory
  file:
    path: "{{ cert_path }}"
    state: "directory"
    recurse: yes
    owner: "root"
    group: "root"

- name: Copy cert
  copy:
    src: "{{ cert_file }}"
    dest: "{{ cert_path }}/{{ cert_file }}"
  notify:
    - update-ca-certificates


